---
import FormattedDate from "@/components/FormattedDate.astro";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

type Props = {
  isFirst?: boolean;
  post: CollectionEntry<"blog">;
};
const { post } = Astro.props;
---

<div
  class:list={[
    "row-span-4 grid grid-rows-subgrid",
    "bg-gray-50 hover:bg-gray-100",
    "jusitfy-center",
    "items-center",
    "shadow shadow-gray-400",
    "p-3 md:p-4",
    "rounded-2xl",
    "w-full max-w-full",
    "h-full max-h-48",
    "transition-all hover:shadow-lg",
    "cursor-pointer",
  ]}
  data-post-slug={post.slug}
>
  <article
    class="relative row-span-4 grid h-auto max-h-full max-w-full grid-rows-subgrid self-start"
  >
    <div class="flex flex-row items-start gap-x-4">
      {
        post.data.preview && (
          <Image
            src={post.data.preview}
            width={192}
            height={192}
            class="aspect-square h-[64px] w-[64px] rounded-lg border bg-white object-contain"
            loading={"lazy"}
            alt={`${post.slug} preview`}
          />
        )
      }
      <h4 class="text-pretty pt-2 font-bold text-gray-800">
        {post.data.title}
      </h4>
    </div>
    <FormattedDate date={post.data.date} />
    <p class="line-clamp-2 text-sm text-gray-700 md:text-base">
      {post.data.description}
    </p>
    <ul class="mt-2 flex flex-row flex-wrap gap-x-1 gap-y-1 text-xs">
      {
        post.data.tags &&
          post.data.tags.slice(0, 3).map((tag) => (
            <li>
              <a
                href={`/tags/${tag}`}
                class="tag-link inline-flex rounded-full bg-gray-600 px-2 py-1 text-gray-100 transition-colors hover:bg-gray-700"
                data-tag={tag}
              >
                {tag}
              </a>
            </li>
          ))
      }
    </ul>
  </article>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Handle blog card clicks
    document.querySelectorAll("[data-post-slug]").forEach((card) => {
      card.addEventListener("click", (e) => {
        const target = e.target as HTMLElement;

        // If clicking on a tag link, don't navigate to the post
        if (
          target.classList.contains("tag-link") ||
          target.closest(".tag-link")
        ) {
          return;
        }

        // Navigate to the blog post
        const slug = (card as HTMLElement).dataset.postSlug;
        if (slug) {
          window.location.href = `/blogs/${slug}/`;
        }
      });
    });
  });
</script>

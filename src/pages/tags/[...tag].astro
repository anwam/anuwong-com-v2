---
import { getCollection } from "astro:content";
import BlogItem from "@/modules/blog/components/BlogItem.astro";
import { SITE_TITLE } from "../../consts";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const allTags = new Set<string>();

  // Collect all unique tags from all posts
  allPosts.forEach((post) => {
    if (post.data.tags) {
      post.data.tags.forEach((tag) => {
        allTags.add(tag);
      });
    }
  });

  // Generate paths for each tag
  return Array.from(allTags).map((tag) => ({
    params: { tag },
  }));
}

const { tag } = Astro.params;

// Get all posts that have the current tag and are not drafts
const posts = (await getCollection("blog"))
  .filter((post) => {
    if (post.data.draft) return false;
    if (!post.data.tags) return false;
    return post.data.tags.includes(tag as string);
  })
  .sort((a, b) => b.data?.date.valueOf() - a.data?.date.valueOf());

const title = `Tag: ${tag} | ${SITE_TITLE}`;
const description = `All blog posts tagged with "${tag}"`;
---

<BaseLayout title={title} description={description}>
  <main class="container mx-auto mt-3 px-3 md:mt-4 md:px-0 lg:max-w-5xl">
    <header class="mb-6">
      <h1 class="text-3xl font-bold text-gray-800 md:text-4xl">
        Tag: <span class="text-gray-600">#{tag}</span>
      </h1>
      <p class="mt-2 text-gray-600">
        {posts.length}
        {posts.length === 1 ? "post" : "posts"} found
      </p>
    </header>

    {
      posts.length > 0 ? (
        <section class="grid grid-cols-1 grid-rows-[repeat(4,_auto)] gap-4 md:grid-cols-3">
          {posts.map((post, index) => (
            <BlogItem isFirst={index === 0} post={post} />
          ))}
        </section>
      ) : (
        <div class="rounded-lg bg-gray-100 p-8 text-center">
          <p class="text-gray-600">No posts found with this tag.</p>
        </div>
      )
    }
  </main>
</BaseLayout>
